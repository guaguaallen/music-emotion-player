{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\96326\\\\.cursor-tutor\\\\music\\\\src\\\\components\\\\EmotionDetector.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as faceapi from 'face-api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmotionDetector = ({\n  onEmotionDetected\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const loadModels = async () => {\n      try {\n        await faceapi.nets.tinyFaceDetector.loadFromUri('/models');\n        await faceapi.nets.faceExpressionNet.loadFromUri('/models');\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error loading models:', error);\n      }\n    };\n    loadModels();\n  }, []);\n  useEffect(() => {\n    if (!isLoading) {\n      const video = document.getElementById('video');\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(stream => {\n        video.srcObject = stream;\n      }).catch(err => console.error('Error accessing camera:', err));\n      video.addEventListener('play', () => {\n        const canvas = faceapi.createCanvasFromMedia(video);\n        document.body.append(canvas);\n        const displaySize = {\n          width: video.width,\n          height: video.height\n        };\n        faceapi.matchDimensions(canvas, displaySize);\n        setInterval(async () => {\n          const detections = await faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions()).withFaceExpressions();\n          if (detections) {\n            const emotion = getTopEmotion(detections.expressions);\n            onEmotionDetected(emotion);\n          }\n        }, 1000); // 改为每秒检测一次\n      });\n    }\n  }, [isLoading, onEmotionDetected]);\n  const getTopEmotion = expressions => {\n    return Object.keys(expressions).reduce((a, b) => expressions[a] > expressions[b] ? a : b);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading emotion detection models...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 20\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"video\",\n      width: \"720\",\n      height: \"560\",\n      autoPlay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(EmotionDetector, \"QmMObrvwCqfhPfVpIPABr9yxZgQ=\");\n_c = EmotionDetector;\nexport default EmotionDetector;\nvar _c;\n$RefreshReg$(_c, \"EmotionDetector\");","map":{"version":3,"names":["React","useState","useEffect","faceapi","jsxDEV","_jsxDEV","EmotionDetector","onEmotionDetected","_s","isLoading","setIsLoading","loadModels","nets","tinyFaceDetector","loadFromUri","faceExpressionNet","error","console","video","document","getElementById","navigator","mediaDevices","getUserMedia","then","stream","srcObject","catch","err","addEventListener","canvas","createCanvasFromMedia","body","append","displaySize","width","height","matchDimensions","setInterval","detections","detectSingleFace","TinyFaceDetectorOptions","withFaceExpressions","emotion","getTopEmotion","expressions","Object","keys","reduce","a","b","children","fileName","_jsxFileName","lineNumber","columnNumber","id","autoPlay","muted","_c","$RefreshReg$"],"sources":["C:/Users/96326/.cursor-tutor/music/src/components/EmotionDetector.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as faceapi from 'face-api.js';\r\n\r\ninterface EmotionDetectorProps {\r\n  onEmotionDetected: (emotion: string) => void;\r\n}\r\n\r\nconst EmotionDetector: React.FC<EmotionDetectorProps> = ({ onEmotionDetected }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      try {\r\n        await faceapi.nets.tinyFaceDetector.loadFromUri('/models');\r\n        await faceapi.nets.faceExpressionNet.loadFromUri('/models');\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error('Error loading models:', error);\r\n      }\r\n    };\r\n    loadModels();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      const video = document.getElementById('video') as HTMLVideoElement;\r\n      navigator.mediaDevices.getUserMedia({ video: true })\r\n        .then(stream => {\r\n          video.srcObject = stream;\r\n        })\r\n        .catch(err => console.error('Error accessing camera:', err));\r\n\r\n      video.addEventListener('play', () => {\r\n        const canvas = faceapi.createCanvasFromMedia(video);\r\n        document.body.append(canvas);\r\n        const displaySize = { width: video.width, height: video.height };\r\n        faceapi.matchDimensions(canvas, displaySize);\r\n\r\n        setInterval(async () => {\r\n          const detections = await faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions()).withFaceExpressions();\r\n          if (detections) {\r\n            const emotion = getTopEmotion(detections.expressions);\r\n            onEmotionDetected(emotion);\r\n          }\r\n        }, 1000); // 改为每秒检测一次\r\n      });\r\n    }\r\n  }, [isLoading, onEmotionDetected]);\r\n\r\n  const getTopEmotion = (expressions: any) => {\r\n    return Object.keys(expressions).reduce((a, b) => expressions[a] > expressions[b] ? a : b);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? <p>Loading emotion detection models...</p> : null}\r\n      <video id=\"video\" width=\"720\" height=\"560\" autoPlay muted></video>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmotionDetector;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,KAAKC,OAAO,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMvC,MAAMC,eAA+C,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EACjF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMR,OAAO,CAACS,IAAI,CAACC,gBAAgB,CAACC,WAAW,CAAC,SAAS,CAAC;QAC1D,MAAMX,OAAO,CAACS,IAAI,CAACG,iBAAiB,CAACD,WAAW,CAAC,SAAS,CAAC;QAC3DJ,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDL,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAENT,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,SAAS,EAAE;MACd,MAAMS,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAqB;MAClEC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEL,KAAK,EAAE;MAAK,CAAC,CAAC,CACjDM,IAAI,CAACC,MAAM,IAAI;QACdP,KAAK,CAACQ,SAAS,GAAGD,MAAM;MAC1B,CAAC,CAAC,CACDE,KAAK,CAACC,GAAG,IAAIX,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEY,GAAG,CAAC,CAAC;MAE9DV,KAAK,CAACW,gBAAgB,CAAC,MAAM,EAAE,MAAM;QACnC,MAAMC,MAAM,GAAG3B,OAAO,CAAC4B,qBAAqB,CAACb,KAAK,CAAC;QACnDC,QAAQ,CAACa,IAAI,CAACC,MAAM,CAACH,MAAM,CAAC;QAC5B,MAAMI,WAAW,GAAG;UAAEC,KAAK,EAAEjB,KAAK,CAACiB,KAAK;UAAEC,MAAM,EAAElB,KAAK,CAACkB;QAAO,CAAC;QAChEjC,OAAO,CAACkC,eAAe,CAACP,MAAM,EAAEI,WAAW,CAAC;QAE5CI,WAAW,CAAC,YAAY;UACtB,MAAMC,UAAU,GAAG,MAAMpC,OAAO,CAACqC,gBAAgB,CAACtB,KAAK,EAAE,IAAIf,OAAO,CAACsC,uBAAuB,CAAC,CAAC,CAAC,CAACC,mBAAmB,CAAC,CAAC;UACrH,IAAIH,UAAU,EAAE;YACd,MAAMI,OAAO,GAAGC,aAAa,CAACL,UAAU,CAACM,WAAW,CAAC;YACrDtC,iBAAiB,CAACoC,OAAO,CAAC;UAC5B;QACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACZ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAAClC,SAAS,EAAEF,iBAAiB,CAAC,CAAC;EAElC,MAAMqC,aAAa,GAAIC,WAAgB,IAAK;IAC1C,OAAOC,MAAM,CAACC,IAAI,CAACF,WAAW,CAAC,CAACG,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKL,WAAW,CAACI,CAAC,CAAC,GAAGJ,WAAW,CAACK,CAAC,CAAC,GAAGD,CAAC,GAAGC,CAAC,CAAC;EAC3F,CAAC;EAED,oBACE7C,OAAA;IAAA8C,QAAA,GACG1C,SAAS,gBAAGJ,OAAA;MAAA8C,QAAA,EAAG;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAAG,IAAI,eAC9DlD,OAAA;MAAOmD,EAAE,EAAC,OAAO;MAACrB,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC,KAAK;MAACqB,QAAQ;MAACC,KAAK;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV,CAAC;AAAC/C,EAAA,CApDIF,eAA+C;AAAAqD,EAAA,GAA/CrD,eAA+C;AAsDrD,eAAeA,eAAe;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}